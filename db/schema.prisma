// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:Aravindrakumar@0133@db.hcnphbvzyosjwaabzjge.supabase.co:5432/postgres"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------
model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           String   @default("USER")
  firstname      String?
  managerid      Int
  image          String?
  lastname       String?

  tokens                  Token[]
  sessions                Session[]
  WS_OOO_DISCUSSION_CARDS WS_OOO_DISCUSSION_CARD[]
  WS_OOO_ACTION_ITEMS     WS_OOO_ACTION_ITEMS[]
  WS_ONE_ON_ONES          WS_ONE_ON_ONES[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
  managerid          Int?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  // See note below about TokenType enum
  // type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

// NOTE: It's highly recommended to use an enum for the token type
//       but enums only work in Postgres.
//       See: https://blitzjs.com/docs/database-overview#switch-to-postgresql
// enum TokenType {
//   RESET_PASSWORD
// }

model WS_LABELS {
  LABEL_CODE String @id
  LABEL_TEXT String
  TAG        String

  WS_OOO_BOARD_DETAILS WS_OOO_BOARD_DETAILS?
}

model WS_ONE_ON_ONES {
  ID                   Int                    @id @default(autoincrement())
  EMPLOYEE_ID          Int
  OOO_WITH_EMPLOYEE_ID Int
  SCHEDULED_TIME       DateTime
  START_TIME           DateTime               @updatedAt
  END_TIME             DateTime               @updatedAt
  CREATED_BY           Int
  CREATED_DATE         DateTime               @default(now())
  LAST_UPDATED_BY      Int
  LAST_UPDATED_DATE    DateTime               @updatedAt
  WS_OOO_BOARD_DETAILS WS_OOO_BOARD_DETAILS[]


  User User? @relation(fields: [CREATED_BY], references: [id])
}

model WS_OOO_INTELLIGENT_CONTEXT_POINTS {
  ID                 Int    @id @default(autoincrement())
  CONTEXT_SECTION    String
  DISPLAY_FLAG       String @default("Y")
  CONTEXT_POINT_TEXT String
  TAG_FOR_TOPIC      String
  EMPLOYEE_ID        String
  SOURCE_APPLICATION String
}

model WS_OOO_BOARD_DETAILS {
  ID             Int                   @id @default(autoincrement())
  OOO_ID         Int
  AGENDA_TYPE    String
  COLOR          String                @default("purple")
  CREATED_BY     Int
  ACTION_ITEMS   WS_OOO_ACTION_ITEMS[]
  WS_LABELS      WS_LABELS?            @relation(fields: [AGENDA_TYPE], references: [LABEL_CODE])
  WS_ONE_ON_ONES WS_ONE_ON_ONES?       @relation(fields: [OOO_ID], references: [ID])
}

model WS_OOO_ACTION_ITEMS {
  ID                     Int                      @id @default(autoincrement())
  AGENDA_DETAIL_ID       Int?
  CREATED_BY             Int?
  ACTION_TEXT            String?
  ACTION_DESCRIPTION     String?
  STATUS                 String?
  ASSIGNEE_ID            Int?
  CREATED_DATE           DateTime                 @default(now())
  DUE_DATE               DateTime?
  WS_OOO_BOARD_DETAILS   WS_OOO_BOARD_DETAILS?    @relation(fields: [AGENDA_DETAIL_ID], references: [ID])
  User                   User?                    @relation(fields: [CREATED_BY], references: [id])
  WS_OOO_DISCUSSION_CARD WS_OOO_DISCUSSION_CARD[]
}

model WS_OOO_DISCUSSION_CARD {
  ID                    Int                  @id @default(autoincrement())
  CREATED_BY            Int?
  DISCUSSION_POINT      String
  DESCRIPTION           String?
  DISPLAY_FLAG          Boolean
  User                  User?                @relation(fields: [CREATED_BY], references: [id])
  WS_OOO_ACTION_ITEMS   WS_OOO_ACTION_ITEMS? @relation(fields: [wS_OOO_ACTION_ITEMSID], references: [ID])
  wS_OOO_ACTION_ITEMSID Int?
}
